{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\snverma\\\\Desktop\\\\web development for beginners\\\\React\\\\todo\\\\src\\\\App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: \"\",\n      list: []\n    };\n  } //incorporating local storage \n\n\n  componentDidMount() {\n    this.hydrateStateWithLocalStorage(); // add event listener to save state to localStorage\n    // when user leaves/refreshes the page\n\n    window.addEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this)); // saves if component has a chance to unmount\n\n    this.saveStateToLocalStorage();\n  }\n\n  hydrateStateWithLocalStorage() {\n    // for all items in state\n    for (let key in this.state) {\n      // if the key exists in localStorage\n      if (localStorage.hasOwnProperty(key)) {\n        // get the key's value from localStorage\n        let value = localStorage.getItem(key); // parse the localStorage string and setState\n\n        try {\n          value = JSON.parse(value);\n          this.setState({\n            [key]: value\n          });\n        } catch (e) {\n          // handle empty string\n          this.setState({\n            [key]: value\n          });\n        }\n      }\n    }\n  }\n\n  saveStateToLocalStorage() {\n    // for every item in React state\n    for (let key in this.state) {\n      // save to localStorage\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n\n  updateInput(key, value) {\n    // update react state\n    this.setState({\n      [key]: value\n    });\n  }\n\n  addItem() {\n    // create a new item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    }; // copy current list of items\n\n    const list = [...this.state.list]; // add the new item to the list\n\n    list.push(newItem); // update state with new list, reset the new item input\n\n    this.setState({\n      list,\n      newItem: \"\"\n    });\n  }\n\n  deleteItem(id) {\n    // copy current list of items\n    const list = [...this.state.list]; // filter out the item being deleted\n\n    const updatedList = list.filter(item => item.id !== id);\n    this.setState({\n      list: updatedList\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"app-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, \"MY TODO\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: 30,\n        textAlign: \"left\",\n        maxWidth: 500,\n        margin: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Type item here\",\n      value: this.state.newItem,\n      onChange: e => this.updateInput(\"newItem\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"add-btn btn-floating\",\n      onClick: () => this.addItem(),\n      disabled: !this.state.newItem.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, \" + \")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, this.state.list.map(item => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }, item.value, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-floating\",\n        onClick: () => this.deleteItem(item.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"material-icons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, \"x\")));\n    })))));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));\nexport default App;","map":{"version":3,"sources":["C:/Users/snverma/Desktop/web development for beginners/React/todo/src/App.js"],"names":["React","ReactDOM","App","Component","constructor","props","state","newItem","list","componentDidMount","hydrateStateWithLocalStorage","window","addEventListener","saveStateToLocalStorage","bind","componentWillUnmount","removeEventListener","key","localStorage","hasOwnProperty","value","getItem","JSON","parse","setState","e","setItem","stringify","updateInput","addItem","id","Math","random","slice","push","deleteItem","updatedList","filter","item","render","padding","textAlign","maxWidth","margin","target","length","map","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: \"\",\n      list: []\n    };\n  }\n\n  //incorporating local storage \n  componentDidMount() {\n    this.hydrateStateWithLocalStorage();\n\n    // add event listener to save state to localStorage\n    // when user leaves/refreshes the page\n    window.addEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n\n    // saves if component has a chance to unmount\n    this.saveStateToLocalStorage();\n  }\n\n  hydrateStateWithLocalStorage() {\n    // for all items in state\n    for (let key in this.state) {\n      // if the key exists in localStorage\n      if (localStorage.hasOwnProperty(key)) {\n        // get the key's value from localStorage\n        let value = localStorage.getItem(key);\n\n        // parse the localStorage string and setState\n        try {\n          value = JSON.parse(value);\n          this.setState({ [key]: value });\n        } catch (e) {\n          // handle empty string\n          this.setState({ [key]: value });\n        }\n      }\n    }\n  }\n\n  saveStateToLocalStorage() {\n    // for every item in React state\n    for (let key in this.state) {\n      // save to localStorage\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n\n  updateInput(key, value) {\n    // update react state\n    this.setState({ [key]: value });\n  }\n\n  addItem() {\n    // create a new item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n \n    };\n\n    // copy current list of items\n    const list = [...this.state.list];\n\n    // add the new item to the list\n    list.push(newItem);\n\n    // update state with new list, reset the new item input\n    this.setState({\n      list,\n      newItem: \"\"\n    });\n  }\n\n  deleteItem(id) {\n    // copy current list of items\n    const list = [...this.state.list];\n    // filter out the item being deleted\n    const updatedList = list.filter(item => item.id !== id);\n\n    this.setState({ list: updatedList });\n  }\n  \n  render() {\n    return (\n      <div>\n\n      <h1 className=\"app-title\">MY TODO</h1>\n        \n        <div className=\"container\">\n        <div\n          style={{\n            padding: 30,\n            textAlign: \"left\",\n            maxWidth: 500,\n            margin: \"auto\"\n          }}\n        >\n          \n          <br />\n          <input\n            type=\"text\"\n            placeholder=\"Type item here\"\n            value={this.state.newItem}\n            onChange={e => this.updateInput(\"newItem\", e.target.value)}\n          />\n          <button\n            className=\"add-btn btn-floating\"\n            onClick={() => this.addItem()}\n            disabled={!this.state.newItem.length}\n          >\n            <i class=\"material-icons\"> + </i>\n          </button>\n          <br /> <br />\n          <ul>\n            {this.state.list.map(item => {\n              return (\n                <li key={item.id}>\n                  {item.value}\n                  <button className=\"btn btn-floating\" onClick={() => this.deleteItem(item.id)}>\n                    <i class=\"material-icons\">x</i>\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nexport default App;"]},"metadata":{},"sourceType":"module"}